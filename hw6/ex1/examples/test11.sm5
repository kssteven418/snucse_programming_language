[push (b,
  [bind print_bool;
  push b;
  load;
  jtr (
    [push 1;
    malloc;
    bind #write_var;
    push #write_var;
    store;
    push #write_var;
    load;
    put;
    push #write_var;
    load;
    unbind;
    pop],
    [push 0;
    malloc;
    bind #write_var;
    push #write_var;
    store;
    push #write_var;
    load;
    put;
    push #write_var;
    load;
    unbind;
    pop]);
  unbind;
  pop]
  );
bind print_bool;
push true;
malloc;
bind x;
push x;
store;
push true;
malloc;
bind y;
push y;
store;
push false;
push x;
store;
push x;
load;
push x;
load;
push true;
eq;
eq;
malloc;
bind z;
push z;
store;
push print_bool;
push print_bool;
push x;
load;
not;
malloc;
call;
pop;
push print_bool;
push print_bool;
push y;
load;
not;
not;
malloc;
call;
pop;
push print_bool;
push print_bool;
push z;
load;
malloc;
call;
pop;
push print_bool;
push print_bool;
push unit;
push unit;
eq;
malloc;
call;
pop;
push print_bool;
push print_bool;
push 123;
push 123;
eq;
malloc;
call;
pop;
push print_bool;
push print_bool;
push false;
push false;
eq;
malloc;
call;
pop;
push print_bool;
push print_bool;
push true;
push true;
eq;
malloc;
call;
pop;
push print_bool;
push print_bool;
push false;
push true;
eq;
malloc;
call;
pop;
push print_bool;
push print_bool;
push true;
push false;
eq;
malloc;
call;
pop;
push print_bool;
push print_bool;
push 123;
push -123;
eq;
malloc;
call;
pop;
push print_bool;
push print_bool;
push unit;
push 123;
eq;
malloc;
call;
pop;
push print_bool;
push print_bool;
push true;
push 1;
eq;
malloc;
call;
unbind;
pop;
unbind;
pop;
unbind;
pop;
unbind;
pop]
